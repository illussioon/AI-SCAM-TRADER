"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º —Å—Å—ã–ª–∫–∞–º
"""

import logging
import re
from typing import Optional, Dict, Any
from config import BOT_TOKEN, BOT_USERNAME

logger = logging.getLogger(__name__)

def extract_ref_from_start_command(command_text: str) -> Optional[str]:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –∏–∑ –∫–æ–º–∞–Ω–¥—ã /start
    
    Args:
        command_text (str): –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã /start
        
    Returns:
        Optional[str]: Telegram ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –∏–ª–∏ None
        
    Example:
        /start ref_123456789 -> "123456789"
        /start -> None
    """
    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ —á–∞—Å—Ç–∏
        parts = command_text.strip().split()
        
        if len(parts) < 2:
            return None
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ–æ—Ä–º–∞—Ç—É ref_telegram_id
        ref_param = parts[1]
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞: ref_123456789
        ref_pattern = r'^ref_(\d+)$'
        match = re.match(ref_pattern, ref_param)
        
        if match:
            telegram_id = match.group(1)
            logger.info(f"üîó –ò–∑–≤–ª–µ—á–µ–Ω —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: {telegram_id}")
            return telegram_id
        else:
            logger.info(f"‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞: {ref_param}")
            return None
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞: {e}")
        return None

def generate_referral_link(bot_username: str, telegram_id: int) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        bot_username (str): Username –±–æ—Ç–∞ (–±–µ–∑ @)
        telegram_id (int): Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        str: –ì–æ—Ç–æ–≤–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞
        
    Example:
        generate_referral_link("RoyallAppBot", 123456789) 
        -> "https://t.me/RoyallAppBot?start=ref_123456789"
    """
    try:
        # –£–±–∏—Ä–∞–µ–º @ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        clean_username = bot_username.lstrip('@')
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
        ref_link = f"https://t.me/{clean_username}?start=ref_{telegram_id}"
        
        logger.info(f"üîó –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è {telegram_id}: {ref_link}")
        return ref_link
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏: {e}")
        return f"https://t.me/{bot_username}?start=ref_{telegram_id}"

def validate_referrer_id(referrer_id: str, new_user_id: int) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
    
    Args:
        referrer_id (str): Telegram ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
        new_user_id (int): Telegram ID –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        bool: True –µ—Å–ª–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä –≤–∞–ª–∏–¥–µ–Ω, False –µ—Å–ª–∏ –Ω–µ—Ç
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        referrer_telegram_id = int(referrer_id)
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–º —Å–∞–º–æ–≥–æ —Å–µ–±—è
        if referrer_telegram_id == new_user_id:
            logger.warning(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_user_id} –ø—ã—Ç–∞–µ—Ç—Å—è —Å—Ç–∞—Ç—å —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–º —Å–∞–º–æ–≥–æ —Å–µ–±—è")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ID –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ Telegram ID (–±–æ–ª—å—à–µ 0)
        if referrer_telegram_id <= 0:
            logger.warning(f"‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π Telegram ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞: {referrer_telegram_id}")
            return False
            
        logger.info(f"‚úÖ –†–µ—Ñ–µ—Ä–µ—Ä {referrer_telegram_id} –≤–∞–ª–∏–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {new_user_id}")
        return True
        
    except ValueError:
        logger.warning(f"‚ö†Ô∏è –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º: {referrer_id}")
        return False
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞: {e}")
        return False

def format_referral_info(referrer_id: str, new_user_info: Dict[str, Any]) -> Dict[str, Any]:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤ –∏ API
    
    Args:
        referrer_id (str): Telegram ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞  
        new_user_info (Dict): –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        
    Returns:
        Dict: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    """
    try:
        return {
            "referrer_telegram_id": int(referrer_id),
            "new_user_telegram_id": new_user_info.get("telegram_id"),
            "new_user_username": new_user_info.get("username"),
            "registration_type": "referral",
            "referral_link": f"ref_{referrer_id}",
            "timestamp": new_user_info.get("created_at")
        }
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")
        return {
            "referrer_telegram_id": referrer_id,
            "new_user_telegram_id": new_user_info.get("telegram_id"),
            "registration_type": "referral_error",
            "error": str(e)
        }

def get_bot_username_from_token(token: str) -> str:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç username –±–æ—Ç–∞ –∏–∑ —Ç–æ–∫–µ–Ω–∞ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ) –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–º—è
    
    Args:
        token (str): –¢–æ–∫–µ–Ω –±–æ—Ç–∞
        
    Returns:
        str: Username –±–æ—Ç–∞
    """
    try:
        # –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã —Å–¥–µ–ª–∞—Ç—å API –∑–∞–ø—Ä–æ—Å –∫ Telegram
        # –ù–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–º—è
        # TODO: –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —á–µ—Ä–µ–∑ Bot API
        return BOT_USERNAME  # –ò–º—è –±–æ—Ç–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è username –±–æ—Ç–∞: {e}")
        return "RoyallAppBot"

def log_referral_registration(referrer_id: str, new_user_info: Dict[str, Any], success: bool = True):
    """
    –õ–æ–≥–∏—Ä—É–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    
    Args:
        referrer_id (str): ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
        new_user_info (Dict): –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        success (bool): –£—Å–ø–µ—à–Ω–æ—Å—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    """
    try:
        if success:
            logger.info(
                f"‚úÖ –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø: "
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_user_info.get('username')} (ID: {new_user_info.get('telegram_id')}) "
                f"–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ —Å—Å—ã–ª–∫–µ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ {referrer_id}"
            )
        else:
            logger.warning(
                f"‚ö†Ô∏è –û–®–ò–ë–ö–ê –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò: "
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_user_info.get('username')} (ID: {new_user_info.get('telegram_id')}) "
                f"–Ω–µ —Å–º–æ–≥ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ —Å—Å—ã–ª–∫–µ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ {referrer_id}"
            )
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
REFERRAL_PREFIX = "ref_"
REFERRAL_REWARD_AMOUNT = 10.0  # –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
REFERRAL_MIN_ID_LENGTH = 6     # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ Telegram ID

def calculate_referral_reward(referrer_level: int = 1) -> float:
    """
    –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–∞–≥—Ä–∞–¥—É –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
    
    Args:
        referrer_level (int): –£—Ä–æ–≤–µ–Ω—å —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
        
    Returns:
        float: –†–∞–∑–º–µ—Ä –Ω–∞–≥—Ä–∞–¥—ã
    """
    base_reward = REFERRAL_REWARD_AMOUNT
    
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–Ω—É—Å—ã –∑–∞ —É—Ä–æ–≤–µ–Ω—å
    level_bonus = (referrer_level - 1) * 2.0
    
    return base_reward + level_bonus
