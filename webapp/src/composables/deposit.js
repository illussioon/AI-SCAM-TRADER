import { ref } from 'vue';
import axios from 'axios';
import { usePersistentNotifications } from './usePersistentNotifications';

const API_BASE_URL = import.meta.env.VITE_API_URL || 'http://127.0.0.1:8000';

/**
 * Composable –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º –±–∞–ª–∞–Ω—Å–∞
 */
export function useDeposit() {
  const isLoading = ref(false);
  const error = ref(null);
  const depositStatus = ref(null);
  
  // –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const { addDepositNotification, addReferralBonusNotification } = usePersistentNotifications();

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
   * @param {number} telegramId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
   * @param {number} amount - –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
   * @param {string} paymentType - –¢–∏–ø –æ–ø–ª–∞—Ç—ã (–°–ë–ü, –ö–∞—Ä—Ç–∞ –∏ —Ç.–¥.)
   * @param {object} paymentDetails - –î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞
   * @returns {Promise<object>} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
   */
  const createDepositRequest = async (telegramId, amount, paymentType = '–°–ë–ü', paymentDetails = {}) => {
    isLoading.value = true;
    error.value = null;

    try {
      console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ:', {
        telegramId,
        amount,
        paymentType,
        paymentDetails,
        url: `${API_BASE_URL}/api/deposit/create`
      });

      const requestData = {
        telegram_id: parseInt(telegramId),
        amount: parseFloat(amount),
        payment_type: paymentType,
        payment_details: paymentDetails || {}
      };

      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:', requestData);

      const response = await axios.post(`${API_BASE_URL}/api/deposit/create`, requestData, {
        headers: {
          'Content-Type': 'application/json',
        },
        timeout: 10000 // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
      });

      console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', response);

      if (response.data && response.data.success) {
        console.log('‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω:', response.data);
        return response.data;
      } else {
        console.error('‚ùå –ù–µ—É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:', response.data);
        throw new Error(response.data?.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞');
      }
    } catch (err) {
      console.error('‚ùå –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞:', {
        message: err.message,
        response: err.response?.data,
        status: err.response?.status,
        config: err.config
      });
      
      let errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
      
      if (err.response) {
        // –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å –æ—à–∏–±–∫–æ–π
        errorMessage = err.response.data?.detail || err.response.data?.message || `HTTP ${err.response.status}`;
      } else if (err.request) {
        // –ó–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ
        errorMessage = '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.';
      } else {
        // –û—à–∏–±–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞
        errorMessage = err.message;
      }
      
      error.value = errorMessage;
      throw new Error(errorMessage);
    } finally {
      isLoading.value = false;
    }
  };

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
   * @param {number} requestId - ID –∑–∞–ø—Ä–æ—Å–∞
   * @returns {Promise<object>} –°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞
   */
  const getDepositStatus = async (requestId) => {
    try {
      const response = await axios.get(`${API_BASE_URL}/api/deposit/status/${requestId}`);
      
      if (response.data.success) {
        depositStatus.value = response.data.data.status;
        return response.data.data;
      } else {
        throw new Error(response.data.message || '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞');
      }
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:', err);
      error.value = err.response?.data?.detail || err.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
      throw err;
    }
  };

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param {number} telegramId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
   * @returns {Promise<object|null>} –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ null
   */
  const getLastDepositRequest = async (telegramId) => {
    try {
      const response = await axios.get(`${API_BASE_URL}/api/deposit/last/${telegramId}`);
      
      if (response.data.success) {
        return response.data.data;
      }
      return null;
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', err);
      return null;
    }
  };

  /**
   * –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ (–¥–ª—è WebSocket/polling –≤ –±—É–¥—É—â–µ–º)
   * @param {number} requestId - ID –∑–∞–ø—Ä–æ—Å–∞
   * @param {function} callback - Callback —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
   */
  const subscribeToStatusUpdates = (requestId, callback) => {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—Ä–æ—Å–∞:', requestId);
    
    // Polling –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
    const interval = setInterval(async () => {
      try {
        const status = await getDepositStatus(requestId);
        
        // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ approved –∏–ª–∏ rejected, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º polling
        if (status.status === 'approved' || status.status === 'rejected') {
          clearInterval(interval);
          
          console.log('üéØ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è:', status);
          
          // –°–æ–∑–¥–∞–µ–º persistent —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
          addDepositNotification({
            status: status.status,
            amount: status.amount,
            bonus_amount: status.bonus_amount,
            total_amount: status.total_amount,
            payment_type: status.payment_type || '–°–ë–ü'
          });
          
          // –í—ã–∑—ã–≤–∞–µ–º callback –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
          if (callback) {
            callback(status);
          }
        }
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', err);
      }
    }, 3000);

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏
    return () => {
      console.log('‚èπÔ∏è –û—Ç–º–µ–Ω—è–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞:', requestId);
      clearInterval(interval);
    };
  };

  return {
    isLoading,
    error,
    depositStatus,
    createDepositRequest,
    getDepositStatus,
    getLastDepositRequest,
    subscribeToStatusUpdates
  };
}

