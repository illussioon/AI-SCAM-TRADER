import { ref, computed, onMounted } from 'vue'
import { defineStore } from 'pinia'
import WebApp from '@twa-dev/sdk'
import { useApi } from '../composables/useApi.js'

export const useTelegramStore = defineStore('telegram', () => {
  // API –∫–æ–º–ø–æ–∑–∞–±–ª
  const api = useApi()
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ
  const isInitialized = ref(false)
  const user = ref(null)
  const initData = ref(null)
  const initDataUnsafe = ref(null)
  
  // –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
  const userPhoto = computed(() => {
    if (user.value?.photo_url) {
      return user.value.photo_url
    }
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –∞–≤–∞—Ç–∞—Ä–∫—É –µ—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    return '/img/avatar.webp'
  })
  
  const userId = computed(() => {
    return user.value?.id || null
  })
  
  const firstName = computed(() => {
    return user.value?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
  })
  
  const lastName = computed(() => {
    return user.value?.last_name || ''
  })
  
  const fullName = computed(() => {
    return `${firstName.value} ${lastName.value}`.trim()
  })
  
  const username = computed(() => {
    return user.value?.username || null
  })
  
  // –ú–µ—Ç–æ–¥—ã
  const initialize = () => {
    try {
      console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp...')
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebApp
      WebApp.ready()
      
      // –†–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
      WebApp.expand()
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      initData.value = WebApp.initData
      initDataUnsafe.value = WebApp.initDataUnsafe
      
      if (WebApp.initDataUnsafe?.user) {
        user.value = WebApp.initDataUnsafe.user
        console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã:', user.value)
      } else {
        console.warn('‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ')
        // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        user.value = {
          id: 851069605,
          first_name: 'Test',
          last_name: 'User',
          username: 'testuser',
          photo_url: null
        }
      }
      
      isInitialized.value = true
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–µ–º—É
      WebApp.setHeaderColor('#000000')
      WebApp.setBackgroundColor('#000000')
      
      console.log('‚úÖ Telegram WebApp —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:', error)
      
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫ –¥–∞–Ω–Ω—ã–µ
      user.value = {
        id: 851069605,
        first_name: 'Test',
        last_name: 'User',
        username: 'testuser',
        photo_url: null
      }
      isInitialized.value = true
    }
  }
  
  const close = () => {
    WebApp.close()
  }
  
  const showAlert = (message) => {
    WebApp.showAlert(message)
  }
  
  const showConfirm = (message, callback) => {
    WebApp.showConfirm(message, callback)
  }
  
  const hapticFeedback = (type = 'light') => {
    WebApp.HapticFeedback.impactOccurred(type)
  }
  
  // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
  const showMainButton = (text, callback) => {
    WebApp.MainButton.setText(text)
    WebApp.MainButton.onClick(callback)
    WebApp.MainButton.show()
  }
  
  const hideMainButton = () => {
    WebApp.MainButton.hide()
  }
  
  // API –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º
  const sendUserDataToServer = async () => {
    try {
      console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä...')
      
      const userData = {
        user_id: userId.value,
        first_name: firstName.value,
        last_name: lastName.value,
        username: username.value,
        photo_url: user.value?.photo_url || null,
        init_data: initData.value,
        timestamp: Date.now()
      }
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º API –∫–æ–º–ø–æ–∑–∞–±–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
      const response = await api.post('/api/user', userData)
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã:', response)
      
      return response
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
      throw error
    }
  }
  
  const checkApiConnection = async () => {
    try {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API...')
      console.log('üåê API Domain:', api.domain)
      
      const status = await api.checkStatus()
      console.log('‚úÖ API —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', status)
      
      return status
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API:', error)
      throw error
    }
  }
  
  const getUserBalanceFromServer = async () => {
    try {
      if (!userId.value) {
        throw new Error('User ID –Ω–µ –Ω–∞–π–¥–µ–Ω')
      }
      
      console.log(`üí∞ –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId.value}...`)
      
      const balance = await api.get(`/api/user/${userId.value}/balance`)
      console.log('‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–µ–Ω:', balance)
      
      return balance
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', error)
      throw error
    }
  }

  const getUserStatsFromServer = async () => {
    try {
      if (!userId.value) {
        throw new Error('User ID –Ω–µ –Ω–∞–π–¥–µ–Ω')
      }
      
      console.log(`üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId.value}...`)
      
      const stats = await api.getUserStats(userId.value)
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:', stats)
      
      return stats
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error)
      throw error
    }
  }

  const createUserOnServer = async () => {
    try {
      if (!userId.value || !user.value) {
        throw new Error('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
      }

      console.log(`üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${username.value || `user_${userId.value}`}...`)

      const userData = {
        username: username.value || `user_${userId.value}`,
        telegram_id: userId.value,
        ref: null // –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥, –µ—Å–ª–∏ –µ—Å—Ç—å
      }

      const result = await api.createUser(userData)
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω/–Ω–∞–π–¥–µ–Ω:', result)
      
      return result
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
      throw error
    }
  }
  
  return {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    isInitialized,
    user,
    initData,
    initDataUnsafe,
    
    // –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    userPhoto,
    userId,
    firstName,
    lastName,
    fullName,
    username,
    
    // –ú–µ—Ç–æ–¥—ã
    initialize,
    close,
    showAlert,
    showConfirm,
    hapticFeedback,
    showMainButton,
    hideMainButton,
    
    // API –º–µ—Ç–æ–¥—ã
    sendUserDataToServer,
    checkApiConnection,
    getUserBalanceFromServer,
    getUserStatsFromServer,
    createUserOnServer,
    
    // API —É—Ç–∏–ª–∏—Ç—ã (–¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞)
    apiDomain: api.domain,
    apiUrls: api.urls
  }
})
